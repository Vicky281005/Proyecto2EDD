
package Interfaz;

import org.graphstream.graph.Graph;
import org.graphstream.graph.implementations.SingleGraph;
import org.graphstream.ui.view.Viewer;
import EDD.Arbol;
import EDD.NodoArbol;
import MainClass.Pregunta;
import org.graphstream.ui.view.ViewerPipe;

/**
 *
 * @author jmmor
 */
public class mostrarArbol extends javax.swing.JFrame {

    static Arbol arbol;

    /**
     * Creates new form mostrarArbol
     */
    public mostrarArbol(Arbol a) {
        initComponents();
        arbol = a;
    }

    public void mostrar() {

        Graph graph = new SingleGraph("Árbol");

        NodoArbol[] aux = arbol.preorden();
        for (NodoArbol n : aux) {
            Pregunta p = (Pregunta) n.getData();
            graph.addNode(p.getSinopsis());
        }
        int id = 0;
        for (NodoArbol n : aux) {
            Pregunta p = (Pregunta) n.getData();
            if(n.getHijoIzq() != null && n.getHijoDer() != null){
            Pregunta i = (Pregunta) n.getHijoIzq().getData();
            Pregunta r = (Pregunta) n.getHijoDer().getData();

            graph.addEdge(String.valueOf(id), p.getSinopsis(), i.getSinopsis());
            graph.addEdge(String.valueOf(id), p.getSinopsis(), r.getSinopsis());

            id += 1;
            }
        }


// Establece las propiedades de visualización
        graph.setAttribute("ui.stylesheet",
                "node { size: 15px; text-alignment: under; } "
                + // Tamaño de los nodos
                "node.label { fill-color: white; size: 20px; } "
                + // Color y tamaño de la etiqueta
                "edge { fill-color: black; }");

        // Ajustar el layout para evitar superposición
        graph.setAttribute("ui.quality");
        graph.setAttribute("ui.antialias");
        graph.setAttribute("ui.layout", "force");
        graph.setAttribute("ui.layout.force.springLength", 150); // Distancia entre nodos
        graph.setAttribute("ui.layout.force.springConstant", 0.2); // Constante de resorte

        // Crear un Viewer para mostrar el grafo
        System.setProperty("org.graphstream.ui", "swing");
        graph.display();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mostrarArbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mostrarArbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mostrarArbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mostrarArbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mostrarArbol(arbol).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
